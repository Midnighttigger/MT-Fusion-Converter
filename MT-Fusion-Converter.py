import os
import shutil
import ast
import lib.Comb as Comb
from PIL import Image

#making main directories
dr1 = os.listdir()
if not "import" in dr1:
    print('made folder: "import"')
    os.mkdir("import")
if not "export" in dr1:
    print('made folder: "export"')
    os.mkdir("export")
if not "logs" in dr1:
    print('made folder: "logs"')
    os.mkdir("logs")
if not "config.txt" in dr1:
    print('made "config.txt" with default settings')
    config = open("config.txt","w")
    config.write('"loglength":"3"')
    config.close()
#logging
dr2 = os.listdir("logs/")
f = os.listdir("import/")
defaultexport = {"1":"6","2":"1","4":"1","5":"1","6":"1","7":"8","8":"7","9":"10","10":"9","11":"12","12":"11","13":"11","14":"15","15":"14","16":"14","17":"18","18":"17","19":"18"}
for i in range(len(f)):
    index = f[i]
    try:
        tsetup = open("import/" + index + "/setup.txt","r")
        table = ast.literal_eval("{" + tsetup.read().replace("\n", "") + "}")
        tsetup.close()
        if "import" in table:
            importtype = table["import"]
        else:
            importtype = "ignore"
        if "export" in table:
            exporttype = table["export"]
        else:
            exporttype = "ignore"
        if "base" in table:
            base = int(table["base"])
        else:
            base = 16
        if "copylist" in table:
            copylist = table["copylist"]
        else:
            copylist = "ignore"
        print('operating on "import/' + index + '" with setup ' + format(table))
        if base:
            if base == 0:
                print('how dare you have a zero base in "import/' + index + '", raising division by zero critical error because of it because you shouldnt even have this sized base!!!')
                1/0
        if exporttype == "0":
        #defaultexport
            exporttype = defaultexport[importtype]
        if importtype == "1":
        #fusionfull
            tf = Image.open("import/" + index + "/1.png")
        elif importtype == "2":
        #fusioncompact
            ti = Image.open("import/" + index + "/1.png")
            tf = Comb.Comb(ti,base)
            ti.close()
        elif importtype == "3":
        #fusionsimple
            ti1 = Image.open("import/" + index + "/1.png")
            try:
                ti2 = Image.open("import/" + index + "/2.png")
            except:
                ti2 = Image.new("RGBA",(base,base))
            tf = Comb.Comb.CombAdv(ti1,ti2,base)
            ti = Image.new("RGBA",(base*5,base))
            ti1c1 = ti1.crop((0,0,base,base))
            ti.paste(ti1c1,(0,0))
            ti1c1.close()
            ti2.paste(ti1c1,(base,0))
            ti2.close()
            ti1c3 = ti1.crop((base,base,base*2,base*2))
            ti.paste(ti1c3,(base*2,0))
            ti1c3.close()
            ti1c4 = ti1.crop((0,base,base,base*2))
            ti.paste(ti1c4,(base*3,0))
            ti1c4.close()
            ti1c5 = ti1.crop((base,0,base*2,base))
            ti.paste(ti1c5,(base*4,0))
            ti1c5.close()
            tf = Comb.Comb(ti,base)
        elif importtype == "4":
        #CTM-Mod
            t1 = Image.open("import/" + index + "/1.png")
            tz = Image.open("import/" + index + "/2.png")
            ti = Image.new("RGBA",(base*5,base))
            ti.paste(t1,(0,0))
            t1.close()
            t2 = tz.crop((0,0,base,base))
            ti.paste(t2,(base,0))
            t2.close()
            t3 = tz.crop((base,0,base*2,base))
            ti.paste(t3,(base*2,0))
            t3.close()
            t4 = tz.crop((0,base,base,base*2))
            ti.paste(t4,(base*3,0))
            t4.close()
            t5 = tz.crop((base,base,base*2,base*2))
            tz.close()
            ti.paste(t5,(base*4,0))
            t5.close()
            tf = Comb.Comb(ti,base)
            ti.close()
        elif importtype == "5":
        #optifinecompact
            ti = Image.new("RGBA",(base*5,base))
            t1 = Image.open("import/" + index + "/0.png")
            ti.paste(t1,(0,0))
            t1.close()
            t2 = Image.open("import/" + index + "/1.png")
            ti.paste(t2,(base,0))
            t2.close()
            t3 = Image.open("import/" + index + "/2.png")
            ti.paste(t3,(base*2,0))
            t3.close()
            t4 = Image.open("import/" + index + "/3.png")
            ti.paste(t4,(base*3,0))
            t4.close()
            t5 = Image.open("import/" + index + "/4.png")
            ti.paste(t5,(base*4,0))
            t5.close()
            tf = Comb.Comb(ti,base)
            ti.close()
        elif importtype == "6":
        #optifinefull
            tf = Image.new("RGBA",(base*8,base*8))
            t0 = Image.open("import/" + index + "/0.png")
            tf.paste(t0,(0,0))
            t0.close()
            t1 = Image.open("import/" + index + "/1.png")
            tf.paste(t1,(base,0))
            t1.close()
            t2 = Image.open("import/" + index + "/2.png")
            tf.paste(t2,(base*2,0))
            t2.close()
            t3 = Image.open("import/" + index + "/3.png")
            tf.paste(t3,(base*3,0))
            t3.close()
            t4 = Image.open("import/" + index + "/4.png")
            tf.paste(t4,(base*4,0))
            t4.close()
            t5 = Image.open("import/" + index + "/5.png")
            tf.paste(t5,(base*5,0))
            t5.close()
            t6 = Image.open("import/" + index + "/6.png")
            tf.paste(t6,(base*6,0))
            t6.close()
            t7 = Image.open("import/" + index + "/7.png")
            tf.paste(t7,(base*7,0))
            t7.close()
            t12 = Image.open("import/" + index + "/12.png")
            tf.paste(t12,(0,base))
            t12.close()
            t13 = Image.open("import/" + index + "/13.png")
            tf.paste(t13,(base,base))
            t13.close()
            t14 = Image.open("import/" + index + "/14.png")
            tf.paste(t14,(base*2,base))
            t14.close()
            t15 = Image.open("import/" + index + "/15.png")
            tf.paste(t15,(base*3,base))
            t15.close()
            t16 = Image.open("import/" + index + "/16.png")
            tf.paste(t16,(base*4,base))
            t16.close()
            t17 = Image.open("import/" + index + "/17.png")
            tf.paste(t17,(base*5,base))
            t17.close()
            t18 = Image.open("import/" + index + "/18.png")
            tf.paste(t18,(base*6,base))
            t18.close()
            t19 = Image.open("import/" + index + "/19.png")
            tf.paste(t19,(base*7,base))
            t19.close()
            t24 = Image.open("import/" + index + "/24.png")
            tf.paste(t24,(0,base*2))
            t24.close()
            t25 = Image.open("import/" + index + "/25.png")
            tf.paste(t25,(base,base*2))
            t25.close()
            t26 = Image.open("import/" + index + "/26.png")
            tf.paste(t26,(base*2,base*2))
            t26.close()
            t27 = Image.open("import/" + index + "/27.png")
            tf.paste(t27,(base*3,base*2))
            t27.close()
            t28 = Image.open("import/" + index + "/28.png")
            tf.paste(t28,(base*4,base*2))
            t28.close()
            t29 = Image.open("import/" + index + "/29.png")
            tf.paste(t29,(base*5,base*2))
            t29.close()
            t30 = Image.open("import/" + index + "/30.png")
            tf.paste(t30,(base*6,base*2))
            t30.close()
            t31 = Image.open("import/" + index + "/31.png")
            tf.paste(t31,(base*7,base*2))
            t31.close()
            t36 = Image.open("import/" + index + "/36.png")
            tf.paste(t36,(0,base*3))
            t36.close()
            t37 = Image.open("import/" + index + "/37.png")
            tf.paste(t37,(base,base*3))
            t37.close()
            t38 = Image.open("import/" + index + "/38.png")
            tf.paste(t38,(base*2,base*3))
            t38.close()
            t39 = Image.open("import/" + index + "/39.png")
            tf.paste(t39,(base*3,base*3))
            t39.close()
            t40 = Image.open("import/" + index + "/40.png")
            tf.paste(t40,(base*4,base*3))
            t40.close()
            t41 = Image.open("import/" + index + "/41.png")
            tf.paste(t41,(base*5,base*3))
            t41.close()
            t42 = Image.open("import/" + index + "/42.png")
            tf.paste(t42,(base*6,base*3))
            t42.close()
            t43 = Image.open("import/" + index + "/43.png")
            tf.paste(t43,(base*7,base*3))
            t43.close()
            t34 = Image.open("import/" + index + "/34.png")
            tf.paste(t34,(0,base*4))
            t34.close()
            t46 = Image.open("import/" + index + "/46.png")
            tf.paste(t46,(base,base*4))
            t46.close()
            t23 = Image.open("import/" + index + "/23.png")
            tf.paste(t23,(base*2,base*4))
            t23.close()
            t22 = Image.open("import/" + index + "/22.png")
            tf.paste(t22,(base*3,base*4))
            t22.close()
            t9 = Image.open("import/" + index + "/9.png")
            tf.paste(t9,(base*4,base*4))
            t9.close()
            t21 = Image.open("import/" + index + "/21.png")
            tf.paste(t21,(base*5,base*4))
            t21.close()
            t32 = Image.open("import/" + index + "/32.png")
            tf.paste(t32,(base*6,base*4))
            t32.close()
            t33 = Image.open("import/" + index + "/33.png")
            tf.paste(t33,(base*7,base*4))
            t33.close()
            t35 = Image.open("import/" + index + "/35.png")
            tf.paste(t35,(0,base*5))
            t35.close()
            t11 = Image.open("import/" + index + "/11.png")
            tf.paste(t11,(base*2,base*5))
            t11.close()
            t10 = Image.open("import/" + index + "/10.png")
            tf.paste(t10,(base*3,base*5))
            t10.close()
            t8 = Image.open("import/" + index + "/8.png")
            tf.paste(t8,(base*4,base*5))
            t8.close()
            t20 = Image.open("import/" + index + "/20.png")
            tf.paste(t20,(base*5,base*5))
            t20.close()
            t44 = Image.open("import/" + index + "/44.png")
            tf.paste(t44,(base*6,base*5))
            t44.close()
            t45 = Image.open("import/" + index + "/45.png")
            tf.paste(t45,(base*7,base*5))
            t45.close()
        elif importtype == "7":
        #horizontal
            tfv = Image.open("import/" + index + "/1.png")
            ti = Image.new("RGBA",(base*5,base))
            t1 = tfv.crop((0,0,base,base))
            t2 = tfv.crop((base,0,base*2,base))
            t3 = tfv.crop((base*2,0,base*3,base))
            t4 = tfv.crop((base*3,0,base*4,base))
            tfv.close()
            ti.paste(t1,(0,0))
            t1.close()
            ti.paste(t3,(base*3,0))
            t3.close()
            tf = Comb.Comb(ti,base)
            ti.close()
            tf.paste(t2,(base,0))
            t2.close()
            tf.paste(t4,(base*3,0))
            t4.close()
        elif importtype == "8":
        #optifinehorizontal
            tfv = Image.new("RGBA",(base*4,base))
            t0 = Image.open("import/" + index + "/3.png")
            tfv.paste(t0,(0,0))
            t0.close()
            t1 = Image.open("import/" + index + "/0.png")
            tfv.paste(t1,(base,0))
            t1.close()
            t2 = Image.open("import/" + index + "/1.png")
            tfv.paste(t2,(base*2,0))
            t2.close()
            t3 = Image.open("import/" + index + "/2.png")
            tfv.paste(t3,(base*3,0))
            t3.close()
            ti = Image.new("RGBA",(base*5,base))
            t1 = tfv.crop((0,0,base,base))
            t2 = tfv.crop((base,0,base*2,base))
            t3 = tfv.crop((base*2,0,base*3,base))
            t4 = tfv.crop((base*3,0,base*4,base))
            tfv.close()
            ti.paste(t1,(0,0))
            t1.close()
            ti.paste(t3,(base*3,0))
            t3.close()
            tf = Comb.Comb(ti,base)
            ti.close()
            tf.paste(t2,(base,0))
            t2.close()
            tf.paste(t4,(base*3,0))
            t4.close()
        elif importtype == "9":
        #vertical
            tfv = Image.open("import/" + index + "1.png")
            ti = Image.new("RGBA",(base*5,base))
            t1 = tfv.crop((0,0,base,base))
            t2 = tfv.crop((0,base,base,base*2))
            t3 = tfv.crop((0,base*2,base,base*3))
            t4 = tfv.crop((0,base*3,base,base*4))
            tfv.close()
            ti.paste(t1,(0,0))
            t1.close()
            ti.paste(t3,(base*2,0))
            t3.close()
            tf = Comb.Comb(ti,base)
            ti.close()
            tf.paste(t2,(0,base))
            t2.close()
            tf.paste(t4,(0,base*3))
            t4.close()
        elif importtype == "10":
        #optifinevertical
            tfv = Image.new("RGBA",(base,base*5))
            t0 = Image.open("import/" + index + "/3.png")
            tfv.paste(t0,(0,0))
            t0.close()
            t1 = Image.open("import/" + index + "/2.png")
            tfv.paste(t1,(0,base))
            t1.close()
            t2 = Image.open("import/" + index + "/1.png")
            tfv.paste(t2,(0,base*2))
            t2.close()
            t3 = Image.open("import/" + index + "/0.png")
            tfv.paste(t3,(0,base*3))
            t3.close()
            ti = Image.new("RGBA",(base*5,base))
            t1 = tfv.crop((0,0,base,base))
            t2 = tfv.crop((0,base,base,base*2))
            t3 = tfv.crop((0,base*2,base,base*3))
            t4 = tfv.crop((0,base*3,base,base*4))
            tfv.close()
            ti.paste(t1,(0,0))
            t1.close()
            ti.paste(t3,(base*2,0))
            t3.close()
            tf = Comb.Comb(ti,base)
            ti.close()
            tf.paste(t2,(0,base))
            t2.close()
            tf.paste(t4,(0,base*3))
            t4.close()
        elif importtype == "11":
        #horizontal+vertical
            tf = Image.open("import/" + index + "/1.png")
        elif importtype == "12":
        #horizontal+vertical
            th = Image.open("import/" + index + "/h.png")
            tv = Image.open("import/" + index + "/v.png")
            t1 = th.crop((0,0,base,base))
            t2 = th.crop((base,0,base*2,base))
            t3 = th.crop((base*2,0,base*3,base))
            t4 = th.crop((base*3,0,base*4,base))
            th.close()
            t6 = tv.crop((0,base,base,base*2))
            t7 = tv.crop((0,base*2,base,base*3))
            t8 = tv.crop((0,base*3,base,base*4))
            tv.close()
            tf = Image.new("RGBA",(base*4,base*4))
            tf.paste(t1,(0,0))
            t1.close()
            tf.paste(t3,(base,0))
            tf.paste(t6,(base*2,0))
            t6.close()
            tf.paste(t4,(base*3,0))
            tf.paste(t3,(0,base))
            tf.paste(t7,(base,base))
            t7.close()
            tf.paste(t2,(base*2,base))
            tf.paste(t8,(base*3,base))
            t8.close()
            tf.paste(t2,(0,base*2))
            tf.paste(t3,(base,base*2))
            tf.paste(t2,(base*2,base*2))
            tf.paste(t4,(base*3,base*2))
            tf.paste(t3,(0,base*3))
            t3.close()
            tf.paste(t4,(base,base*3))
            tf.paste(t2,(base*2,base*3))
            t2.close()
            tf.paste(t4,(base*3,base*3))
            t4.close()
        elif importtype == "13":
        #horizontal+vertical
            t1 = Image.open("import/" + index + "/3.png")
            t2 = Image.open("import/" + index + "/0.png")
            t3 = Image.open("import/" + index + "/1.png")
            t4 = Image.open("import/" + index + "/2.png")
            t6 = Image.open("import/" + index + "/6.png")
            t7 = Image.open("import/" + index + "/5.png")
            t8 = Image.open("import/" + index + "/4.png")
            tf = Image.new("RGBA",(base*4,base*4))
            tf.paste(t1,(0,0))
            t1.close()
            tf.paste(t3,(base,0))
            tf.paste(t6,(base*2,0))
            t6.close()
            tf.paste(t4,(base*3,0))
            tf.paste(t3,(0,base))
            tf.paste(t7,(base,base))
            t7.close()
            tf.paste(t2,(base*2,base))
            tf.paste(t8,(base*3,base))
            t8.close()
            tf.paste(t2,(0,base*2))
            tf.paste(t3,(base,base*2))
            tf.paste(t2,(base*2,base*2))
            tf.paste(t4,(base*3,base*2))
            tf.paste(t3,(0,base*3))
            t3.close()
            tf.paste(t4,(base,base*3))
            tf.paste(t2,(base*2,base*3))
            t2.close()
            tf.paste(t4,(base*3,base*3))
            t4.close()
        elif importtype == "14":
        #vertical+horizontal
            tf = Image.open("import/" + index + "/1.png")
        elif importtype == "15":
        #vertical+horizontal
            th = Image.open("import/" + index + "/h.png")
            tv = Image.open("import/" + index + "/v.png")
            t2 = th.crop((base,0,base*2,base))
            t3 = th.crop((base*2,0,base*3,base))
            t4 = th.crop((base*3,0,base*4,base))
            th.close()
            t5 = tv.crop((0,0,base,base))
            t6 = tv.crop((0,base,base,base*2))
            t7 = tv.crop((0,base*2,base,base*3))
            t8 = tv.crop((0,base*3,base,base*4))
            tv.close()
            tf = Image.new("RGBA",(base*4,base*4))
            tf.paste(t5,(0,0))
            t5.close()
            tf.paste(t7,(base,0))
            tf.paste(t6,(base*2,0))
            tf.paste(t4,(base*3,0))
            t4.close()
            tf.paste(t3,(0,base))
            t3.close()
            tf.paste(t7,(base,base))
            tf.paste(t2,(base*2,base))
            t2.close()
            tf.paste(t8,(base*3,base))
            tf.paste(t7,(0,base*2))
            tf.paste(t6,(base,base*2))
            tf.paste(t6,(base*2,base*2))
            tf.paste(t6,(base*3,base*2))
            t6.close()
            tf.paste(t8,(0,base*3))
            tf.paste(t7,(base,base*3))
            t7.close()
            tf.paste(t8,(base*2,base*3))
            tf.paste(t8,(base*3,base*3))
            t8.close()
        elif importtype == "16":
        #vertical+horizontal
            t2 = Image.open("import/" + index + "/4.png")
            t3 = Image.open("import/" + index + "/5.png")
            t4 = Image.open("import/" + index + "/6.png")
            t5 = Image.open("import/" + index + "/3.png")
            t6 = Image.open("import/" + index + "/2.png")
            t7 = Image.open("import/" + index + "/1.png")
            t8 = Image.open("import/" + index + "/0.png")
            tf = Image.new("RGBA",(base*4,base*4))
            tf.paste(t5,(0,0))
            t5.close()
            tf.paste(t7,(base,0))
            tf.paste(t6,(base*2,0))
            tf.paste(t4,(base*3,0))
            t4.close()
            tf.paste(t3,(0,base))
            t3.close()
            tf.paste(t7,(base,base))
            tf.paste(t2,(base*2,base))
            t2.close()
            tf.paste(t8,(base*3,base))
            tf.paste(t7,(0,base*2))
            tf.paste(t6,(base,base*2))
            tf.paste(t6,(base*2,base*2))
            tf.paste(t6,(base*3,base*2))
            t6.close()
            tf.paste(t8,(0,base*3))
            tf.paste(t7,(base,base*3))
            t7.close()
            tf.paste(t8,(base*2,base*3))
            tf.paste(t8,(base*3,base*3))
            t8.close()
        elif importtype == "17":
        #fusioncompactoverlay
            tf = Image.open("import/" + index + "/1.png")
        elif importtype == "18":
        #fusionoverlay
            ti = Image.open("import/" + index + "/1.png")
            tf = Image.new("RGBA",(base*5,base*4))
            t1 = ti.crop((base*6,base*4,base*7,base*5))
            tf.paste(t1,(0,0))
            t1.close()
            t2 = ti.crop((base*2,base*3,base*3,base*4))
            tf.paste(t2,(base,0))
            t2.close()
            t3 = ti.crop((base*7,base*4,base*8,base*5))
            tf.paste(t3,(base*2,0))
            t3.close()
            t4 = ti.crop((base*3,base*3,base*4,base*4))
            tf.paste(t4,(base*3,0))
            t4.close()
            t5 = ti.crop((base,base*3,base*2,base*4))
            tf.paste(t5,(base*4,0))
            t6 = ti.crop((base*3,base*2,base*4,base*3))
            tf.paste(t6,(0,base))
            t6.close()
            t7 = ti.crop((0,0,base,base))
            tf.paste(t7,(base,base))
            t7.close()
            t8 = ti.crop((base,base*2,base*2,base*3))
            tf.paste(t8,(base*2,base))
            t8.close()
            t9 = ti.crop((base*3,base,base*4,base*2))
            tf.paste(t9,(base*3,base))
            t9.close()
            t10 = ti.crop((base,base,base*2,base*2))
            tf.paste(t10,(base*4,base))
            t10.close()
            t11 = ti.crop((base*6,base*5,base*7,base*6))
            tf.paste(t11,(0,base*2))
            t11.close()
            t12 = ti.crop((base*2,base,base*3,base*2))
            tf.paste(t12,(base,base*2))
            t12.close()
            t13 = ti.crop((base*7,base*5,base*8,base*6))
            tf.paste(t13,(base*2,base*2))
            t13.close()
            t14 = ti.crop((base*3,0,base*4,base))
            tf.paste(t14,(base*3,base*2))
            t14.close()
            t15 = ti.crop((0,base*3,base,base*4))
            tf.paste(t15,(base*4,base*2))
            t15.close()
            t16 = ti.crop((base,base*5,base*2,base*6))
            tf.paste(t16,(0,base*3))
            t16.close()
            t17 = ti.crop((0,base,base,base*2))
            tf.paste(t17,(base*3,base*3))
            t17.close()
            t18 = ti.crop((base,0,base*2,base))
            tf.paste(t18,(base*4,base*3))
            t18.close()
            ti.close()
        elif importtype == "19":
        #optifineoverlay
            tf = Image.new("RGBA",(base*5,base*4))
            t1 = Image.open("import/" + index + "/0.png")
            tf.paste(t1,(0,0))
            t1.close()
            t2 = Image.open("import/" + index + "/1.png")
            tf.paste(t2,(base,0))
            t2.close()
            t3 = Image.open("import/" + index + "/2.png")
            tf.paste(t3,(base*2,0))
            t3.close()
            t4 = Image.open("import/" + index + "/3.png")
            tf.paste(t4,(base*3,0))
            t4.close()
            t5 = Image.open("import/" + index + "/4.png")
            tf.paste(t5,(base*4,0))
            t5.close()
            t6 = Image.open("import/" + index + "/7.png")
            tf.paste(t6,(0,base))
            t6.close()
            t7 = Image.open("import/" + index + "/8.png")
            tf.paste(t7,(base,base))
            t7.close()
            t8 = Image.open("import/" + index + "/9.png")
            tf.paste(t8,(base*2,base))
            t8.close()
            t9 = Image.open("import/" + index + "/10.png")
            tf.paste(t9,(base*3,base))
            t9.close()
            t10 = Image.open("import/" + index + "/11.png")
            tf.paste(t10,(base*4,base))
            t10.close()
            t11 = Image.open("import/" + index + "/14.png")
            tf.paste(t11,(0,base*2))
            t11.close()
            t12 = Image.open("import/" + index + "/15.png")
            tf.paste(t12,(base,base*2))
            t12.close()
            t13 = Image.open("import/" + index + "/16.png")
            tf.paste(t13,(base*2,base*2))
            t13.close()
            t14 = Image.open("import/" + index + "/12.png")
            tf.paste(t14,(base*3,base*2))
            t14.close()
            t15 = Image.open("import/" + index + "/5.png")
            tf.paste(t15,(base*4,base*2))
            t15.close()
            try:
                t16 = Image.open("import/" + index + "/b.png")
                tf.paste(t16,(0,base*3))
                t16.close()
                print("using b.png in " + '"import/' + index + '"')
            except:
                print("not using b.png in " + '"import/' + index + '" because it doesnt exist')
            t17 = Image.open("import/" + index + "/13.png")
            tf.paste(t17,(base*3,base*3))
            t17.close()
            t18 = Image.open("import/" + index + "/6.png")
            tf.paste(t18,(base*4,base*3))
            t18.close()
        elif importtype == "ignore":
            1+1
        else:
            print("Importtype " + importtype + " is invalid which is in " + '"import/' + index + '"')
        if exporttype == "1":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #fusionfull
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "2":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #fusioncompact
            txf = Image.new("RGBA",(base*5,base))
            tx1 = tf.crop((0,0,base,base))
            txf.paste(tx1,(0,0))
            tx1.close()
            tx2 = tf.crop((base*2,base*2,base*3,base*3))
            txf.paste(tx2,(base,0))
            tx2.close()
            tx3 = tf.crop((0,base*2,base,base*3))
            txf.paste(tx3,(base*2,0))
            tx3.close()
            tx4 = tf.crop((base*2,0,base*3,base))
            txf.paste(tx4,(base*3,0))
            tx4.close()
            tx5 = tf.crop((base,base*4,base*2,base*5))
            tf.close()
            txf.paste(tx5,(base*4,0))
            tx5.close()
            txf.save("export/" + index + "/1.png")
            txf.close()
        elif exporttype == "4":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #CTM-Mod
            tx1 = tf.crop((0,0,base,base))
            tx1.save("export/" + index + "/1.png")
            tx1.close()
            txf = Image.new("RGBA",(base*2,base*2))
            tx2 = tf.crop((base*2,base*2,base*3,base*3))
            txf.paste(tx2,(0,0))
            tx2.close()
            tx3 = tf.crop((0,base*2,base,base*3))
            txf.paste(tx3,(base,0))
            tx3.close()
            tx4 = tf.crop((base*2,0,base*3,base))
            txf.paste(tx4,(0,base))
            tx4.close()
            tx5 = tf.crop((base,base*4,base*2,base*5))
            tf.close()
            txf.paste(tx5,(base,base))
            tx5.close()
            txf.save("export/" + index + "/2.png")
            txf.close()
        elif exporttype == "5":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #optifinecompact
            tx1 = tf.crop((0,0,base,base))
            tx1.save("export/" + index + "/0.png")
            tx1.close()
            tx2 = tf.crop((base*2,base*2,base*3,base*3))
            tx2.save("export/" + index + "/1.png")
            tx2.close()
            tx3 = tf.crop((0,base*2,base,base*3))
            tx3.save("export/" + index + "/2.png")
            tx3.close()
            tx4 = tf.crop((base*2,0,base*3,base))
            tx4.save("export/" + index + "/3.png")
            tx4.close()
            tx5 = tf.crop((base,base*4,base*2,base*5))
            tx5.save("export/" + index + "/4.png")
            tx5.close()
            tf.close()
        elif exporttype == "6":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #optifinefull
            tx0 = tf.crop((0,0,base,base))
            tx0.save("export/" + index + "/0.png")
            tx0.close()
            tx1 = tf.crop((base,0,base*2,base))
            tx1.save("export/" + index + "/1.png")
            tx1.close()
            tx2 = tf.crop((base*2,0,base*3,base))
            tx2.save("export/" + index + "/2.png")
            tx2.close()
            tx3 = tf.crop((base*3,0,base*4,base))
            tx3.save("export/" + index + "/3.png")
            tx3.close()
            tx4 = tf.crop((base*4,0,base*5,base))
            tx4.save("export/" + index + "/4.png")
            tx4.close()
            tx5 = tf.crop((base*5,0,base*6,base))
            tx5.save("export/" + index + "/5.png")
            tx5.close()
            tx6 = tf.crop((base*6,0,base*7,base))
            tx6.save("export/" + index + "/6.png")
            tx6.close()
            tx7 = tf.crop((base*7,0,base*8,base))
            tx7.save("export/" + index + "/7.png")
            tx7.close()
            tx8 = tf.crop((0,base,base,base*2))
            tx8.save("export/" + index + "/12.png")
            tx8.close()
            tx9 = tf.crop((base,base,base*2,base*2))
            tx9.save("export/" + index + "/13.png")
            tx9.close()
            tx10 = tf.crop((base*2,base,base*3,base*2))
            tx10.save("export/" + index + "/14.png")
            tx10.close()
            tx11 = tf.crop((base*3,base,base*4,base*2))
            tx11.save("export/" + index + "/15.png")
            tx11.close()
            tx12 = tf.crop((base*4,base,base*5,base*2))
            tx12.save("export/" + index + "/16.png")
            tx12.close()
            tx13 = tf.crop((base*5,base,base*6,base*2))
            tx13.save("export/" + index + "/17.png")
            tx13.close()
            tx14 = tf.crop((base*6,base,base*7,base*2))
            tx14.save("export/" + index + "/18.png")
            tx14.close()
            tx15 = tf.crop((base*7,base,base*8,base*2))
            tx15.save("export/" + index + "/19.png")
            tx15.close()
            tx16 = tf.crop((0,base*2,base,base*3))
            tx16.save("export/" + index + "/24.png")
            tx16.close()
            tx17 = tf.crop((base,base*2,base*2,base*3))
            tx17.save("export/" + index + "/25.png")
            tx17.close()
            tx18 = tf.crop((base*2,base*2,base*3,base*3))
            tx18.save("export/" + index + "/26.png")
            tx18.close()
            tx19 = tf.crop((base*3,base*2,base*4,base*3))
            tx19.save("export/" + index + "/27.png")
            tx19.close()
            tx20 = tf.crop((base*4,base*2,base*5,base*3))
            tx20.save("export/" + index + "/28.png")
            tx20.close()
            tx21 = tf.crop((base*5,base*2,base*6,base*3))
            tx21.save("export/" + index + "/29.png")
            tx21.close()
            tx22 = tf.crop((base*6,base*2,base*7,base*3))
            tx22.save("export/" + index + "/30.png")
            tx22.close()
            tx23 = tf.crop((base*7,base*2,base*8,base*3))
            tx23.save("export/" + index + "/31.png")
            tx23.close()
            tx24 = tf.crop((0,base*3,base,base*4))
            tx24.save("export/" + index + "/36.png")
            tx24.close()
            tx25 = tf.crop((base,base*3,base*2,base*4))
            tx25.save("export/" + index + "/37.png")
            tx25.close()
            tx26 = tf.crop((base*2,base*3,base*3,base*4))
            tx26.save("export/" + index + "/38.png")
            tx26.close()
            tx27 = tf.crop((base*3,base*3,base*4,base*4))
            tx27.save("export/" + index + "/39.png")
            tx27.close()
            tx28 = tf.crop((base*4,base*3,base*5,base*4))
            tx28.save("export/" + index + "/40.png")
            tx28.close()
            tx29 = tf.crop((base*5,base*3,base*6,base*4))
            tx29.save("export/" + index + "/41.png")
            tx29.close()
            tx30 = tf.crop((base*6,base*3,base*7,base*4))
            tx30.save("export/" + index + "/42.png")
            tx30.close()
            tx31 = tf.crop((base*7,base*3,base*8,base*4))
            tx31.save("export/" + index + "/43.png")
            tx31.close()
            tx32 = tf.crop((0,base*4,base,base*5))
            tx32.save("export/" + index + "/34.png")
            tx32.close()
            tx33 = tf.crop((base,base*4,base*2,base*5))
            tx33.save("export/" + index + "/46.png")
            tx33.close()
            tx34 = tf.crop((base*2,base*4,base*3,base*5))
            tx34.save("export/" + index + "/23.png")
            tx34.close()
            tx35 = tf.crop((base*3,base*4,base*4,base*5))
            tx35.save("export/" + index + "/22.png")
            tx35.close()
            tx36 = tf.crop((base*4,base*4,base*5,base*5))
            tx36.save("export/" + index + "/9.png")
            tx36.close()
            tx37 = tf.crop((base*5,base*4,base*6,base*5))
            tx37.save("export/" + index + "/21.png")
            tx37.close()
            tx38 = tf.crop((base*6,base*4,base*7,base*5))
            tx38.save("export/" + index + "/32.png")
            tx38.close()
            tx39 = tf.crop((base*7,base*4,base*8,base*5))
            tx39.save("export/" + index + "/33.png")
            tx39.close()
            tx40 = tf.crop((0,base*5,base,base*6))
            tx40.save("export/" + index + "/35.png")
            tx40.close()
            tx41 = tf.crop((base*2,base*5,base*3,base*6))
            tx41.save("export/" + index + "/11.png")
            tx41.close()
            tx42 = tf.crop((base*3,base*5,base*4,base*6))
            tx42.save("export/" + index + "/10.png")
            tx42.close()
            tx43 = tf.crop((base*4,base*5,base*5,base*6))
            tx43.save("export/" + index + "/8.png")
            tx43.close()
            tx44 = tf.crop((base*5,base*5,base*6,base*6))
            tx44.save("export/" + index + "/20.png")
            tx44.close()
            tx45 = tf.crop((base*6,base*5,base*7,base*6))
            tx45.save("export/" + index + "/44.png")
            tx45.close()
            tx46 = tf.crop((base*7,base*5,base*8,base*6))
            tx46.save("export/" + index + "/45.png")
            tx46.close()
        elif exporttype == "7":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #horizontal
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "8":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #horizontal
            t0 = tf.crop((0,0,base,base))
            t0.save("export/" + index + "/3.png")
            t0.close()
            t1 = tf.crop((base,0,base*2,base))
            t1.save("export/" + index + "/0.png")
            t1.close()
            t2 = tf.crop((base*2,0,base*3,base))
            t2.save("export/" + index + "/1.png")
            t2.close()
            t3 = tf.crop((base*3,0,base*4,base))
            tf.close()
            t3.save("export/" + index + "/2.png")
            t3.close()
        elif exporttype == "9":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #vertical
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "10":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #vertical
            t0 = tf.crop((0,0,base,base))
            t0.save("export/" + index + "/3.png")
            t0.close()
            t1 = tf.crop((0,base,base,base*2))
            t1.save("export/" + index + "/2.png")
            t1.close()
            t2 = tf.crop((0,base*2,base,base*3))
            t2.save("export/" + index + "/1.png")
            t2.close()
            t3 = tf.crop((0,base*3,base,base*4))
            tf.close()
            t3.save("export/" + index + "/0.png")
            t3.close()
        elif exporttype == "11":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #horizontal+vertical
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "12" or exporttype == "15":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #horizontal+vertical and vertical+horizontal
            ht = Image.new("RGBA",(base*4,base))
            h1 = tf.crop((0,0,base,base))
            ht.paste(h1,(0,0))
            h1.close()
            h2 = tf.crop((base*2,base,base*3,base*2))
            ht.paste(h2,(base,0))
            h2.close()
            h3 = tf.crop((0,base,base,base*2))
            ht.paste(h3,(base*2,0))
            h3.close()
            h4 = tf.crop((base*3,0,base*4,base))
            ht.paste(h4,(base*3,0))
            h4.close()
            ht.save("export/" + index + "/h.png")
            ht.close()
            vt = Image.new("RGBA",(base,base*4))
            v1 = tf.crop((0,0,base,base))
            vt.paste(v1,(0,0))
            v1.close()
            v2 = tf.crop((base*2,0,base*3,base))
            vt.paste(v2,(0,base))
            v2.close()
            v3 = tf.crop((base,base,base*2,base*2))
            vt.paste(v3,(0,base*2))
            v3.close()
            v4 = tf.crop((base*3,base,base*4,base*2))
            tf.close()
            vt.paste(v4,(0,base*3))
            v4.close()
            vt.save("export/" + index + "/v.png")
            vt.close()
        elif exporttype == "13":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #horizontal+vertical
            t1 = tf.crop((0,0,base,base))
            t1.save("export/" + index + "/3.png")
            t1.close()
            t2 = tf.crop((base*2,base,base*3,base*2))
            t2.save("export/" + index + "/0.png")
            t2.close()
            t3 = tf.crop((0,base,base,base*2))
            t3.save("export/" + index + "/1.png")
            t3.close()
            t4 = tf.crop((base*3,0,base*4,base))
            t4.save("export/" + index + "/2.png")
            t4.close()
            t6 = tf.crop((base*2,0,base*3,base))
            t6.save("export/" + index + "/6.png")
            t6.close()
            t7 = tf.crop((base,base,base*2,base*2))
            t7.save("export/" + index + "/5.png")
            t7.close()
            t8 = tf.crop((base*3,base,base*4,base*2))
            tf.close()
            t8.save("export/" + index + "/4.png")
            t8.close()
        elif exporttype == "14":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #vertical+horizontal
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "16":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #vertical+horizontal
            t2 = tf.crop((base*2,base,base*3,base*2))
            t2.save("export/" + index + "/4.png")
            t2.close()
            t3 = tf.crop((0,base,base,base*2))
            t3.save("export/" + index + "/5.png")
            t3.close()
            t4 = tf.crop((base*3,0,base*4,base))
            t4.save("export/" + index + "/6.png")
            t4.close()
            t5 = tf.crop((0,0,base,base))
            t5.save("export/" + index + "/3.png")
            t5.close()
            t6 = tf.crop((base*2,0,base*3,base))
            t6.save("export/" + index + "/2.png")
            t6.close()
            t7 = tf.crop((base,base,base*2,base*2))
            t7.save("export/" + index + "/1.png")
            t7.close()
            t8 = tf.crop((base*3,base,base*4,base*2))
            tf.close()
            t8.save("export/" + index + "/0.png")
            t8.close()
        elif exporttype == "17":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #fusioncompactoverlay
            tf.save("export/" + index + "/1.png")
            tf.close()
        elif exporttype == "18":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #fusionoverlay
            t1 = tf.crop((0,0,base,base))
            t2 = tf.crop((base,0,base*2,base))
            t3 = tf.crop((base*2,0,base*3,base))
            t4 = tf.crop((base*3,0,base*4,base))
            t5 = tf.crop((base*4,0,base*5,base))
            t6 = tf.crop((0,base,base,base*2))
            t7 = tf.crop((base,base,base*2,base*2))
            t8 = tf.crop((base*2,base,base*3,base*2))
            t9 = tf.crop((base*3,base,base*4,base*2))
            t10 = tf.crop((base*4,base,base*5,base*2))
            t11 = tf.crop((0,base*2,base,base*3))
            t12 = tf.crop((base,base*2,base*2,base*3))
            t13 = tf.crop((base*2,base*2,base*3,base*3))
            t14 = tf.crop((base*3,base*2,base*4,base*3))
            t15 = tf.crop((base*4,base*2,base*5,base*3))
            t16 = tf.crop((0,base*3,base,base*4))
            t17 = tf.crop((base*3,base*3,base*4,base*4))
            t18 = tf.crop((base*4,base*3,base*5,base*4))
            tf.close()
            tx3 = Image.alpha_composite(t2,t12)
            tx5 = Image.alpha_composite(t1,t10)
            tx6 = Image.alpha_composite(t3,t9)
            tx7 = Image.alpha_composite(t8,Image.alpha_composite(t1,t11))
            tx8 = Image.alpha_composite(t12,Image.alpha_composite(t1,t3))
            tx13 = Image.alpha_composite(t5,t11)
            tx14 = Image.alpha_composite(t4,t13)
            tx15 = Image.alpha_composite(t2,Image.alpha_composite(t11,t13))
            tx16 = Image.alpha_composite(t6,Image.alpha_composite(t3,t13))
            tx17 = Image.alpha_composite(t6,t8)
            tx21 = Image.alpha_composite(t8,t1)
            tx22 = Image.alpha_composite(t12,t3)
            tx23 = Image.alpha_composite(t8,t11)
            tx24 = Image.alpha_composite(t12,t1)
            tx29 = Image.alpha_composite(t2,t11)
            tx30 = Image.alpha_composite(t6,t13)
            tx31 = Image.alpha_composite(t2,t13)
            tx32 = Image.alpha_composite(t6,t3)
            tx33 = Image.alpha_composite(t1,t13)
            tx34 = Image.alpha_composite(Image.alpha_composite(t1,t3),Image.alpha_composite(t11,t13))
            tx35 = Image.alpha_composite(t3,t13)
            tx36 = Image.alpha_composite(t11,t13)
            tx37 = Image.alpha_composite(t3,Image.alpha_composite(t11,t13))
            tx38 = Image.alpha_composite(t1,Image.alpha_composite(t11,t13))
            tx41 = Image.alpha_composite(t3,t11)
            tx42 = Image.alpha_composite(t1,t3)
            tx43 = Image.alpha_composite(t1,t11)
            tx44 = Image.alpha_composite(t1,Image.alpha_composite(t3,t13))
            tx45 = Image.alpha_composite(t1,Image.alpha_composite(t3,t11))
            tx = Image.new("RGBA",(base*8,base*8))
            tx.paste(t7,(0,0))
            t7.close()
            tx.paste(t18,(base,0))
            t18.close()
            tx.paste(tx3,(base*2,0))
            tx3.close()
            tx.paste(t14,(base*3,0))
            t14.close()
            tx.paste(tx5,(base*4,0))
            tx5.close()
            tx.paste(tx6,(base*5,0))
            tx6.close()
            tx.paste(tx7,(base*6,0))
            tx7.close()
            tx.paste(tx8,(base*7,0))
            tx8.close()
            tx.paste(t17,(0,base))
            t17.close()
            tx.paste(t10,(base,base))
            t10.close()
            tx.paste(t12,(base*2,base))
            t12.close()
            tx.paste(t9,(base*3,base))
            t9.close()
            tx.paste(tx13,(base*4,base))
            tx13.close()
            tx.paste(tx14,(base*5,base))
            tx14.close()
            tx.paste(tx15,(base*6,base))
            tx15.close()
            tx.paste(tx16,(base*7,base))
            tx16.close()
            tx.paste(tx17,(0,base*2))
            tx17.close()
            tx.paste(t8,(base,base*2))
            t8.close()
            tx.paste(t6,(base*3,base*2))
            t6.close()
            tx.paste(tx21,(base*4,base*2))
            tx21.close()
            tx.paste(tx22,(base*5,base*2))
            tx22.close()
            tx.paste(tx23,(base*6,base*2))
            tx23.close()
            tx.paste(tx24,(base*7,base*2))
            tx24.close()
            tx.paste(t15,(0,base*3))
            t15.close()
            tx.paste(t5,(base,base*3))
            t5.close()
            tx.paste(t2,(base*2,base*3))
            t2.close()
            tx.paste(t4,(base*3,base*3))
            t4.close()
            tx.paste(tx29,(base*4,base*3))
            tx29.close()
            tx.paste(tx30,(base*5,base*3))
            tx30.close()
            tx.paste(tx31,(base*6,base*3))
            tx31.close()
            tx.paste(tx32,(base*7,base*3))
            tx32.close()
            tx.paste(tx33,(0,base*4))
            tx33.close()
            tx.paste(tx34,(base,base*4))
            tx34.close()
            tx.paste(tx35,(base*2,base*4))
            tx35.close()
            tx.paste(tx36,(base*3,base*4))
            tx36.close()
            tx.paste(tx37,(base*4,base*4))
            tx37.close()
            tx.paste(tx38,(base*5,base*4))
            tx38.close()
            tx.paste(t1,(base*6,base*4))
            t1.close()
            tx.paste(t3,(base*7,base*4))
            t3.close()
            tx.paste(tx41,(0,base*5))
            tx41.close()
            tx.paste(t16,(base,base*5))
            t16.close()
            tx.paste(tx42,(base*2,base*5))
            tx42.close()
            tx.paste(tx43,(base*3,base*5))
            tx43.close()
            tx.paste(tx44,(base*4,base*5))
            tx44.close()
            tx.paste(tx45,(base*5,base*5))
            tx45.close()
            tx.paste(t11,(base*6,base*5))
            t11.close()
            tx.paste(t13,(base*7,base*5))
            t13.close()
            tx.save("export/" + index + "/1.png")
            tx.close()
        elif exporttype == "19":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #optifineoverlay
            t1 = tf.crop((0,0,base,base))
            t1.save("export/" + index + "/0.png")
            t1.close()
            t2 = tf.crop((base,0,base*2,base))
            t2.save("export/" + index + "/1.png")
            t2.close()
            t3 = tf.crop((base*2,0,base*3,base))
            t3.save("export/" + index + "/2.png")
            t3.close()
            t4 = tf.crop((base*3,0,base*4,base))
            t4.save("export/" + index + "/3.png")
            t4.close()
            t5 = tf.crop((base*4,0,base*5,base))
            t5.save("export/" + index + "/4.png")
            t5.close()
            t6 = tf.crop((0,base,base,base*2))
            t6.save("export/" + index + "/7.png")
            t6.close()
            t7 = tf.crop((base,base,base*2,base*2))
            t7.save("export/" + index + "/8.png")
            t7.close()
            t8 = tf.crop((base*2,base,base*3,base*2))
            t8.save("export/" + index + "/9.png")
            t8.close()
            t9 = tf.crop((base*3,base,base*4,base*2))
            t9.save("export/" + index + "/10.png")
            t9.close()
            t10 = tf.crop((base*4,base,base*5,base*2))
            t10.save("export/" + index + "/11.png")
            t10.close()
            t11 = tf.crop((0,base*2,base,base*3))
            t11.save("export/" + index + "/14.png")
            t11.close()
            t12 = tf.crop((base,base*2,base*2,base*3))
            t12.save("export/" + index + "/15.png")
            t12.close()
            t13 = tf.crop((base*2,base*2,base*3,base*3))
            t13.save("export/" + index + "/16.png")
            t13.close()
            t14 = tf.crop((base*3,base*2,base*4,base*3))
            t14.save("export/" + index + "/12.png")
            t14.close()
            t15 = tf.crop((base*4,base*2,base*5,base*3))
            t15.save("export/" + index + "/5.png")
            t15.close()
            t16 = tf.crop((0,base*3,base,base*4))
            t16.save("export/" + index + "/b.png")
            t16.close()
            t17 = tf.crop((base*3,base*3,base*4,base*4))
            t17.save("export/" + index + "/13.png")
            t17.close()
            t18 = tf.crop((base*4,base*3,base*5,base*4))
            t18.save("export/" + index + "/6.png")
            t18.close()
            tf.close()
        elif not copylist == "ignore":
            try:
                os.mkdir("export/" + index)
                print("made folder " + '"export/' + index + '"')
            except:
                1+1
            #bulkcopypaste
            o = os.listdir("import/" + index)
            for files in o:
                if not files == "setup.txt":
                    printlist = []
                    for copylistname in copylist:
                        printlist.append(format(copylistname + files))
                        shutil.copy2(format("import/" + index + "/" + files),format("export/" + index + "/" + copylistname + files),follow_symlinks=True)
                    print(format('copying "import/' + index + files + '" -> "export/' + index + '/": ' + format(printlist)))
        else:
            print("Exporttype " + exporttype + " is invalid which is in " + '"import/' + index + '"')
    except Exception as texception:
        print(texception)