from PIL import Image
import Comb
def FusionFull(t0,base):
    return t0
def FusionCompact(t0,base,way):
    if way == "fill":
        tf = Comb.Arrange(t0,base,((0,0),(0,1),(3,2),(0,3),(0,4),(0,5),(2,6),(3,7),(0,8),(0,9),(3,10),(0,11),(0,12),(0,13),(3,14),(2,15),(2,16),(2,17),(1,18),(2,19),(2,20),(3,21),(2,22),(3,23),(0,24),(0,25),(3,26),(0,27),(3,28),(2,29),(3,30),(3,31),(4,32),(4,33),(4,34),(4,35),(4,36),(4,37),(4,38),(4,39),(4,40),(4,41),(4,42),(4,43),(4,44),(4,45),(4,46)),8,8)
        t0.close()
        return tf
    else:
        tf = Comb.Gen(t0,base)
        t0.close()
        return tf
def FusionSimple(t0,base,way,t1=None):
    if not t1:
        t1 = Image.new("RGBA",(base,base))
    if way == "fill":
        t1.close()
        tf = Comb.Arrange(t0,base,((0,0),(1,32),(1,33),(1,34),(1,35),(1,36),(1,37),(1,38),(1,39),(1,40),(1,41),(1,42),(1,43),(1,44),(1,45),(1,46),(2,8),(3,3),(8,2),(9,16),(10,1),(11,24),(16,6),(16,17),(16,20),(16,22),(17,7),(17,10),(17,21),(17,23),(18,4),(18,9),(19,5),(19,11),(24,14),(24,26),(24,28),(24,30),(25,15),(25,19),(25,29),(25,31)),8,8)
        t0.close()
        return tf
    else:
        tf = Comb.GenAdv(t0,t1,base)
        t0.close()
        t1.close()
        return tf
def FusionHorizontal(t0,base)
    tf = Comb.Arrange(t0,base,((0,0),(0,8),(0,16),(0,24),(1,1),(1,4),(1,6),(1,9),(1,12),(1,17),(1,20),(1,22),(1,25),(2,2),(2,7),(2,10),(2,14),(2,18),(2,21),(2,23),(2,26),(2,28),(2,30),(2,32),(2,33),(2,34),(2,35),(2,36),(2,37),(2,38),(2,39),(2,40),(2,41),(2,42),(2,43),(2,44),(2,45),(2,46),(3,3),(3,5),(3,11),(3,13),(3,15),(3,19),(3,27),(3,29),(3,31)),8,8)
    t0.close()
    return tf
def FusionVertical(t0,base)
    tf = Comb.Arrange(t0,base,((0,0),(0,1),(0,2),(0,3),(8,4),(8,5),(8,7),(8,8),(8,9),(8,10),(8,11),(8,21),(8,23),(16,6),(16,15),(16,16),(16,17),(16,18),(16,19),(16,20),(16,22),(16,29),(16,31),(16,32),(16,33),(16,34),(16,35),(16,36),(16,37),(16,38),(16,39),(16,40),(16,41),(16,42),(16,43),(16,44),(16,45),(16,46),(24,12),(24,13),(24,14),(24,24),(24,25),(24,26),(24,27),(24,28),(24,30)),8,8)
    t0.close()
    return tf
def FusionJustHorizontalVertical(th,tv,base)
    t0 = Image.new("RGBA",(base*4,base*4))
    t0.paste(tv,(0,0))
    tv.close()
    t0.paste(th,(0,0))
    th.close()
    tf = Comb.Arrange(t0,base,((0,0),(8,8),(16,16),(24,24),(1,1),(1,4),(1,6),(1,9),(1,12),(1,17),(1,20),(1,22),(1,25),(2,2),(2,7),(2,10),(2,14),(2,18),(2,21),(2,23),(2,26),(2,28),(2,30),(2,32),(2,33),(2,34),(2,35),(2,36),(2,37),(2,38),(2,39),(2,40),(2,41),(2,42),(2,43),(2,44),(2,45),(2,46),(3,3),(3,5),(3,11),(3,13),(3,15),(3,19),(3,27),(3,29),(3,31)),8,8)
    t0.close()
    return tf
def FusionJustVerticalHorizontal(tv,th,base)
    t0 = Image.new("RGBA",(base*4,base*4))
    t0.paste(th,(0,0))
    th.close()
    t0.paste(tv,(0,0))
    tv.close()
    tf = Comb.Arrange(t0,base,((0,0),(1,1),(2,2),(3,3),(8,4),(8,5),(8,7),(8,8),(8,9),(8,10),(8,11),(8,21),(8,23),(16,6),(16,15),(16,16),(16,17),(16,18),(16,19),(16,20),(16,22),(16,29),(16,31),(16,32),(16,33),(16,34),(16,35),(16,36),(16,37),(16,38),(16,39),(16,40),(16,41),(16,42),(16,43),(16,44),(16,45),(16,46),(24,12),(24,13),(24,14),(24,24),(24,25),(24,26),(24,27),(24,28),(24,30)),8,8)
    t0.close()
    return tf
def FusionCompactOverlay(t0,base,blank=False,t1=None)
    if blank == True:
        t1 = Image.new("RGBA",(base,base))
    elif not t1:
        t1 = Comb.Arrange(t0,int(base/2),((0,0),(5,1),(16,8),(21,9)),2,2)
    t0.paste(t1,(base*2,base*3))
    t1.close()
    tf1 = Comb.Arrange(t0,base,((9,0),(28,1),(1,2),(19,3),(12,4),(11,5),(10,6),(17,7),(27,8),(12,9),(17,10),(11,11),(4,12),(3,13),(1,14),(8,15),(8,16),(10,17),(26,18),(8,19),(10,20),(17,21),(10,22),(17,23),(20,24),(4,25),(1,26),(3,27),(1,28),(8,29),(1,30),(8,31),(18,32),(0,33),(18,34),(18,35),(18,36),(18,37),(0,38),(2,39),(16,40),(2,41),(16,42),(18,43),(16,44),(16,45),(18,46)),8,8)
    tf2 = Comb.Arrange(t0,base,((17,2),(0,4),(2,5),(16,6),(2,7),(16,12),(18,13),(18,14),(18,15),(10,16),(0,20),(2,21),(16,22),(0,23),(16,28),(18,29),(18,30),(2,31),(0,32),(2,33),(2,34),(16,35),(16,36),(16,37),(2,40),(0,41),(0,42),(2,43),(2,44)),8,8)
    tf3 = Comb.Arrange(t0,base,((0,6),(0,7),(16,14),(2,15),(16,33),(2,36),(0,37),(0,43),(0,44)),8,8)
    tf4 = Comb.Arrange(t0,base,((18,33)),8,8)
    t0.close()
    tf = Image.alpha_composite(Image.alpha_composite(tf1,tf2),Image.alpha_composite(tf3,tf4))
    tf1.close()
    tf2.close()
    tf3.close()
    tf4.close()
    return tf